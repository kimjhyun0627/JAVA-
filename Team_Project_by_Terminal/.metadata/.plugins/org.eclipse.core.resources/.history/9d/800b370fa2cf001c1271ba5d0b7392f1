package TeamProjectByTerminal;

import java.time.LocalDateTime;

public class Date {

	private int year;
	private int month;
	private int day;
	private int hour;
	private int minute;
	private int second;
	private boolean afterNoon;

	LocalDateTime now = LocalDateTime.now();

	public Date() {

		year = now.getYear();
		month = now.getMonthValue();
		day = now.getDayOfMonth();
		hour = now.getHour();

		if (hour > 12)
			afterNoon = true;
		else
			afterNoon = false;

		minute = now.getMinute();
		second = now.getSecond();
	}
	
	public Date(boolean NowOrDefault) {
		
		if (NowOrDefault) {
			year = now.getYear();
			month = now.getMonthValue();
			day = now.getDayOfMonth();
			hour = now.getHour();

			if (hour > 12)
				afterNoon = true;
			else
				afterNoon = false;

			minute = now.getMinute();
			second = now.getSecond();
			
		} else {
			year = 2022;
			month = 1;
			day = 1;
			hour = 0;

			if (hour > 12)
				afterNoon = true;
			else
				afterNoon = false;

			minute = 0;
			second = 0;
		}
	}

	public Date(int newYear, int newMonth, int newDay, int newHour, int newMinute, int newSecond) {

		if (isValidTime(newYear, newMonth, newDay, newHour, newMinute, newSecond)) {

			year = newYear;
			month = newMonth;
			day = newDay;
			hour = newHour;
			minute = newMinute;
			second = newSecond;

		} else
			errorhandler("invalid initializing");
	}

	private boolean isValidTime(int year, int month, int day, int hour, int minute, int second) {

		return ((year > 2020) && (year <= 3000) && (month > 0) && (month <= 12) && (day > 0) && (day <= 31)
				&& (hour >= 0) && (hour < 24) && (minute >= 0) && (minute < 60) && (second >= 0) && (second < 60));
	}

	public void setDate(boolean NowOrDefault) {

		if (NowOrDefault) {
			year = now.getYear();
			month = now.getMonthValue();
			day = now.getDayOfMonth();
			hour = now.getHour();

			if (hour > 12)
				afterNoon = true;
			else
				afterNoon = false;

			minute = now.getMinute();
			second = now.getSecond();
			
		} else {
			year = 2022;
			month = 1;
			day = 1;
			hour = 0;

			if (hour > 12)
				afterNoon = true;
			else
				afterNoon = false;

			minute = 0;
			second = 0;
		}
	}

	public void setDate(int newYear, int newMonth, int newDay, int newHour, int newMinute, int newSecond) {

		if (isValidTime(newYear, newMonth, newDay, newHour, newMinute, newSecond)) {

			year = newYear;
			month = newMonth;
			day = newDay;
			hour = newHour;

			if (hour > 12)
				afterNoon = true;
			else
				afterNoon = false;

			minute = newMinute;
			second = newSecond;

		} else
			errorhandler("invalid setting");
	}

	public int getYear() {

		return year;
	}

	public int getMonth() {

		return month;
	}

	public int getDay() {

		return day;
	}

	public int getHour() {

		return hour;
	}

	public int getMinute() {

		return minute;
	}

	public int getSecond() {

		return second;
	}

	public String toString() {

		return "" + year + "-" + month + "-" + day + " " + ((hour > 12) ? hour - 12 : hour) + ":" + minute + ":"
				+ second + (afterNoon ? " PM" : " AM") + "\n";
	}

	private void errorhandler(String errorType) {

		System.err.println("Error occured in Date class: " + errorType);
	}
}
